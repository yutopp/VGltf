name: ci

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test_dotnet:
    runs-on: ubuntu-20.04
    steps:
      - name: setup env
        run: sudo apt-get update -yy && sudo apt-get install -yy make git python3

      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - run: make setup

      - run: make test-dotnet

  coverage:
    needs: [test_dotnet]
    runs-on: ubuntu-20.04
    steps:
      - name: setup env
        run: sudo apt-get update -yy && sudo apt-get install -yy make git python3

      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - run: |
          curl -s https://codecov.io/bash > codecov
          chmod +x codecov

      - run: make setup

      - run: make coverage-dotnet

      - run: ./codecov -f coverage/lcov.info

  test_unity:
    strategy:
      matrix:
        include:
          - unity_version: 2019.4.22f1
            docker_container: unityci/editor:ubuntu-2019.4.22f1-base-0.11.0
            ulf_secrets_key: UNITY_2019_4_22_f1_ULF

    runs-on: ubuntu-20.04
    container: ${{ matrix.docker_container }}
    env:
      HAS_XSLTPROC: 1 # To export JUnit formatted Test Summary
    steps:
      - name: setup env
        run: |
          apt update -yy && apt install -yy --no-install-recommends software-properties-common
          add-apt-repository -yy ppa:git-core/ppa
          apt update -yy && apt install -yy --no-install-recommends make git python3 xsltproc
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: setup unity license
        run: |
          mkdir -p ~/.cache/unity3d
          mkdir -p ~/.local/share/unity3d/Unity/
          echo "$UNITY_ULF" | base64 -d > ~/.local/share/unity3d/Unity/Unity_lic.ulf
        env:
          UNITY_ULF: ${{ secrets[matrix.ulf_secrets_key] }}

      - uses: actions/checkout@v2

      - run: make setup

      - name: download RuntimeUnitTestToolkit
        run: |
          curl -sL https://github.com/Cysharp/RuntimeUnitTestToolkit/releases/download/2.4.0/RuntimeUnitTestToolkit.2.4.0.unitypackage --output RuntimeUnitTestToolkit.unitypackage

      - name: import test runner package (RuntimeUnitTestToolkit)
        run: |
          /usr/bin/unity-editor \
            -projectPath "$(pwd)" \
            -quit -batchmode -nographics -silent-crashes -logFile \
            -importPackage "$(pwd)/RuntimeUnitTestToolkit.unitypackage"

      # Do not use /headless for the -executeMethod, as the graphics are needed for unit tests to verify that the import/export of shader properties is working
      - name: built unit-tests (Linux64, mono)
        run: |
          /usr/bin/unity-editor \
            -projectPath "$(pwd)" \
            -quit -batchmode -nographics -silent-crashes -logFile \
            -executeMethod UnitTestBuilder.BuildUnitTest \
              /ScriptBackend Mono2x /BuildTarget StandaloneLinux64

      - name: run unit-tests
        run: |
          xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' \
            ./bin/UnitTest/StandaloneLinux64_Mono2x/test
